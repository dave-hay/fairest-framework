{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.increment && $options.increment(...args))\n  }, \"count is : \" + _toDisplayString($data.count), 1\n  /* TEXT */\n  );\n}","map":{"version":3,"mappings":";;uBAiBEA,oBAAwD,QAAxD,EAAwD;IAA/CC,OAAK,yCAAEC,iDAAF;EAA0C,CAAxD,EAA2B,gBAAWC,iBAAEC,WAAF,CAAtC,EAA6C;EAAA;EAA7C","names":["_createElementBlock","onClick","$options","_toDisplayString","$data"],"sourceRoot":"","sources":["/Users/davidhay/code/projects/fairest-framework/vue-app/src/App.vue"],"sourcesContent":["<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      count: 0\n    }\n  },\n  methods: {\n    increment() {\n      this.count++\n    }\n  }\n}\n</script>\n\n<template>\n  <button @click='increment'>count is : {{count}}</button>\n</template>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}